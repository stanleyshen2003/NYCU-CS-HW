$date
	Sat Apr 22 16:08:20 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Lab2_BCD_3digit_add $end
$var wire 1 ! cout1 $end
$var wire 12 " S1 [11:0] $end
$var reg 12 # A [11:0] $end
$var reg 12 $ B [11:0] $end
$var reg 1 % cin $end
$scope module BCD_3digit $end
$var wire 12 & BCD_X [11:0] $end
$var wire 12 ' BCD_Y [11:0] $end
$var wire 1 % cin $end
$var wire 1 ( cout2 $end
$var wire 1 ) cout1 $end
$var wire 1 ! cout $end
$var wire 12 * BCD_S [11:0] $end
$scope module add1 $end
$var wire 4 + BCD_X [3:0] $end
$var wire 4 , BCD_Y [3:0] $end
$var wire 1 - and31 $end
$var wire 1 . and32 $end
$var wire 1 % cin $end
$var wire 1 ) cout $end
$var wire 1 / zero $end
$var wire 4 0 temp [3:0] $end
$var wire 1 1 dontcare $end
$var wire 1 2 c1 $end
$var wire 4 3 Z [3:0] $end
$var wire 4 4 BCD_S [3:0] $end
$scope module fullAdder1 $end
$var wire 4 5 A [3:0] $end
$var wire 4 6 B [3:0] $end
$var wire 4 7 G [3:0] $end
$var wire 4 8 P [3:0] $end
$var wire 1 % cin $end
$var wire 1 2 cout $end
$var wire 4 9 S [3:0] $end
$var wire 5 : C [4:0] $end
$upscope $end
$scope module fullAdder2 $end
$var wire 4 ; A [3:0] $end
$var wire 4 < B [3:0] $end
$var wire 4 = G [3:0] $end
$var wire 4 > P [3:0] $end
$var wire 1 / cin $end
$var wire 1 1 cout $end
$var wire 4 ? S [3:0] $end
$var wire 5 @ C [4:0] $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 4 A BCD_X [3:0] $end
$var wire 4 B BCD_Y [3:0] $end
$var wire 1 C and31 $end
$var wire 1 D and32 $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 E zero $end
$var wire 4 F temp [3:0] $end
$var wire 1 G dontcare $end
$var wire 1 H c1 $end
$var wire 4 I Z [3:0] $end
$var wire 4 J BCD_S [3:0] $end
$scope module fullAdder1 $end
$var wire 4 K A [3:0] $end
$var wire 4 L B [3:0] $end
$var wire 4 M G [3:0] $end
$var wire 4 N P [3:0] $end
$var wire 1 ) cin $end
$var wire 1 H cout $end
$var wire 4 O S [3:0] $end
$var wire 5 P C [4:0] $end
$upscope $end
$scope module fullAdder2 $end
$var wire 4 Q A [3:0] $end
$var wire 4 R B [3:0] $end
$var wire 4 S G [3:0] $end
$var wire 4 T P [3:0] $end
$var wire 1 E cin $end
$var wire 1 G cout $end
$var wire 4 U S [3:0] $end
$var wire 5 V C [4:0] $end
$upscope $end
$upscope $end
$scope module add3 $end
$var wire 4 W BCD_X [3:0] $end
$var wire 4 X BCD_Y [3:0] $end
$var wire 1 Y and31 $end
$var wire 1 Z and32 $end
$var wire 1 ( cin $end
$var wire 1 ! cout $end
$var wire 1 [ zero $end
$var wire 4 \ temp [3:0] $end
$var wire 1 ] dontcare $end
$var wire 1 ^ c1 $end
$var wire 4 _ Z [3:0] $end
$var wire 4 ` BCD_S [3:0] $end
$scope module fullAdder1 $end
$var wire 4 a A [3:0] $end
$var wire 4 b B [3:0] $end
$var wire 4 c G [3:0] $end
$var wire 4 d P [3:0] $end
$var wire 1 ( cin $end
$var wire 1 ^ cout $end
$var wire 4 e S [3:0] $end
$var wire 5 f C [4:0] $end
$upscope $end
$scope module fullAdder2 $end
$var wire 4 g A [3:0] $end
$var wire 4 h B [3:0] $end
$var wire 4 i G [3:0] $end
$var wire 4 j P [3:0] $end
$var wire 1 [ cin $end
$var wire 1 ] cout $end
$var wire 4 k S [3:0] $end
$var wire 5 l C [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
0^
0]
b0 \
0[
0Z
0Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
0H
0G
b0 F
0E
0D
0C
b0 B
b0 A
b0 @
b1 ?
b1 >
b0 =
b0 <
b1 ;
b1 :
b1 9
b0 8
b0 7
b0 6
b0 5
b1 4
b1 3
02
01
b0 0
0/
0.
0-
b0 ,
b0 +
b1 *
0)
0(
b0 '
b0 &
1%
b0 $
b0 #
b1 "
0!
$end
#25
b1100 @
b1100 V
b1100 l
b10 =
b10 S
b10 i
b1001 4
b1001 ?
b110 0
b110 <
1)
b1001 J
b1001 U
b110 F
b110 R
1(
b100110011001 "
b100110011001 *
b1001 `
b1001 k
b110 \
b110 h
1!
12
1H
1^
b101 >
b101 T
b101 j
b11 3
b11 9
b11 ;
b11 I
b11 O
b11 Q
b11 _
b11 e
b11 g
b10011 :
b10011 P
b10011 f
b1001 7
b1001 M
b1001 c
b1001 ,
b1001 6
b1001 B
b1001 L
b1001 X
b1001 b
b1001 +
b1001 5
b1001 A
b1001 K
b1001 W
b1001 a
b100110011001 $
b100110011001 '
b100110011001 #
b100110011001 &
#50
1G
1C
1]
0D
b0 0
b0 <
0)
b110 F
b110 R
1(
02
b0 @
0H
b11100 V
1Y
0^
b11100 l
b1 J
b1 U
b101 `
b101 k
b0 P
1Z
b10100010111 "
b10100010111 *
b111 4
b111 ?
b0 =
b10 S
b1101 T
b110 i
b1001 j
b1011 I
b1011 O
b1011 Q
b1 f
b1111 _
b1111 e
b1111 g
b111 >
b111 3
b111 9
b111 ;
b0 7
b111 8
b0 M
b1011 N
b0 c
b1110 d
b101 ,
b101 6
b11 B
b11 L
b1000 X
b1000 b
b10 +
b10 5
b1000 A
b1000 K
b110 W
b110 a
b0 :
0%
b100000110101 $
b100000110101 '
b11010000010 #
b11010000010 &
#75
11
1D
b11100 @
1G
0]
b10 =
b11000 V
b110 0
b110 <
1)
b100 S
1-
b110 F
b110 R
b1 f
1(
b0 l
b0 \
b0 h
0!
b0 4
b0 ?
b10 J
b10 U
b10100100000 "
b10100100000 *
b101 `
b101 k
0Z
b1111 P
0C
0Y
b1100 >
b1010 T
b0 i
b101 j
b10 :
b1010 3
b1010 9
b1010 ;
b1100 I
b1100 O
b1100 Q
b101 _
b101 e
b101 g
b1 7
b1000 8
b100 M
b11 N
b100 d
b1001 ,
b1001 6
b110 B
b110 L
b0 X
b0 b
b1 +
b1 5
b101 A
b101 K
b100 W
b100 a
b1101001 $
b1101001 '
b10001010001 #
b10001010001 &
#100
11
1G
b11100 @
1C
1.
b110 0
b110 <
1)
b110 =
b11100 V
b110 F
b110 R
b1 f
1(
b111 `
b111 k
b0 J
b0 U
1-
b11 P
0D
b11100000100 "
b11100000100 *
b100 4
b100 ?
b111 j
b10 S
b1100 T
b111 _
b111 e
b111 g
b1010 I
b1010 O
b1010 Q
b1000 >
b1110 3
b1110 9
b1110 ;
b110 7
b1 8
b0 M
b1001 N
b110 d
b110 ,
b110 6
b1 B
b1 L
b110 X
b110 b
b111 +
b111 5
b1000 A
b1000 K
b0 W
b0 a
b1111 :
1%
b11000010110 $
b11000010110 '
b10000111 #
b10000111 &
#125
01
1G
b0 @
b0 0
b0 <
0)
1^
b110 \
b110 h
1!
0-
b11100 V
b110 F
b110 R
1(
b111 `
b111 k
b0 J
b0 U
0.
0Y
0Z
1C
b11100001000 "
b11100001000 *
b1000 4
b1000 ?
b0 =
b111 j
b1000 P
b10 S
b1100 T
b1 _
b1 e
b1 g
b1010 I
b1010 O
b1010 Q
b11111 f
b1000 >
b1000 3
b1000 9
b1000 ;
b1 7
b110 8
b100 M
b10 N
b1 c
b1110 d
b11 ,
b11 6
b100 B
b100 L
b1001 X
b1001 b
b101 +
b101 5
b110 A
b110 K
b111 W
b111 a
b1110 :
0%
b100101000011 $
b100101000011 '
b11101100101 #
b11101100101 &
#150
11
b11100 @
1]
1G
1D
b10 =
1-
b110 0
b110 <
1)
b11100 V
b110 F
b110 R
1(
0^
b11100 l
b1 4
b1 ?
b100 J
b100 U
b101000001 "
b101000001 *
b1 `
b1 k
0.
0Z
b11 P
1C
b1011 f
1Y
b1101 >
b110 S
b1000 T
b10 i
b1101 j
b1000 :
b1011 3
b1011 9
b1011 ;
b1110 I
b1110 O
b1110 Q
b1011 _
b1011 e
b1011 g
b100 7
b11 8
b0 M
b1101 N
b101 c
b0 d
b110 ,
b110 6
b101 B
b101 L
b101 X
b101 b
b1000 A
b1000 K
b101 W
b101 a
b10101010110 $
b10101010110 '
b10110000101 #
b10110000101 &
#175
11
1G
1]
b11100 @
b11100 V
b11100 l
b10 i
b110 0
b110 <
1)
b110 F
b110 R
1(
b110 \
b110 h
1!
b0 J
b0 U
b0 `
b0 k
b10 =
1-
b1011 P
1C
0D
b11 f
1Y
b0 "
b0 *
b0 4
b0 ?
b10 S
b1100 T
b1100 j
b1010 I
b1010 O
b1010 Q
b1010 _
b1010 e
b1010 g
b1100 >
b1010 3
b1010 9
b1010 ;
b0 7
b1001 8
b100 M
b1 N
b0 c
b1001 d
b1 ,
b1 6
b0 X
b0 b
b1000 +
b1000 5
b100 A
b100 K
b1001 W
b1001 a
b11 :
1%
b1010001 $
b1010001 '
b100101001000 #
b100101001000 &
#200
